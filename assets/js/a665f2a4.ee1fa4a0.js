"use strict";(self.webpackChunkef_website_template=self.webpackChunkef_website_template||[]).push([[443],{78:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>s,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const a={},l="02.09.2022 report",o={permalink:"/EF-Informatik/02.09.2022",editUrl:"https://github.com/GabrielMariethoz/EF-Informatik/tree/main/blog/02.09.2022.md",source:"@site/blog/02.09.2022.md",title:"02.09.2022 report",description:"Today we were programming with the help of lists. The exercices were easy except for the prime number exercice. I only didn't think long enough.",date:"2022-12-02T14:43:46.000Z",formattedDate:"2. Dezember 2022",tags:[],readingTime:.985,hasTruncateMarker:!1,authors:[],frontMatter:{},nextItem:{title:"26.08.2022 report",permalink:"/EF-Informatik/26.08.2022"}},h={authorsImageUrls:[]},p=[{value:"Prime number exercice",id:"prime-number-exercice",level:3}],m={toc:p};function s(e){let{components:n,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Today we were programming with the help of lists. The exercices were easy except for the prime number exercice. I only didn't think long enough. "),(0,i.kt)("p",null,"The solution for the listen word riddle 2 exercice is:"),(0,i.kt)("p",null,(0,i.kt)("img",{src:t(8746).Z,width:"799",height:"729"})),(0,i.kt)("h3",{id:"prime-number-exercice"},"Prime number exercice"),(0,i.kt)("p",null,"The problem was that with the code below, the number is divided by another number and the rest isn't an integer once then it's an prime number. That's false! "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"# !!! Code funktioniert nicht !!!\n\nzahlen = []\nprimzahlen = []\n\nfor counter in range(2, 101):\n    zahlen.append(counter)\n\nfor zahl in zahlen:\n    for primzahl in primzahlen:\n        if zahl % primzahl != 0:\n            primzahlen.append(zahl)\n\nprint(primzahlen)\n")),(0,i.kt)("p",null,"My solution was to create a boolean variable that is initiated as true. If the number divided by the prime number has no rest once, the bool is set to false. After the number was divided by all prime numbers the code checks if the bool is still true."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"zahlen = []\nprimzahlen = []\nprimzahl_bool = True\n\nfor counter in range(2, 101):\n    zahlen.append(counter)\n\n\nfor zahl in zahlen:\n    for primzahl in primzahlen:\n        if zahl % primzahl == 0:\n            primzahl_bool = False\n\n    if primzahl_bool == True:\n        primzahlen.append(zahl)\n    primzahl_bool = True\n\nprint(primzahlen)\n\n")))}s.isMDXComponent=!0},8746:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/r_1798534_nBE8D-c6db7ee3ff104f3478b44565446cfde4.jpg"}}]);